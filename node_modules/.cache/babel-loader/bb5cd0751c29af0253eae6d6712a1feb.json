{"ast":null,"code":"const check = () => {\n  if (!('serviceWorker' in navigator)) {\n    throw new Error('No Service Worker support!');\n  }\n\n  if (!('PushManager' in window)) {\n    throw new Error('No Push API Support!');\n  }\n\n  console.log(\"Service worker is supported in your browser!\");\n};\n\nconst registerServiceWorker = async () => {\n  const swRegistration = await navigator.serviceWorker.register('service-worker-push.js');\n  console.log(\"Service worker registerd!\");\n  return swRegistration;\n};\n\nconst requestNotificationPermission = async () => {\n  const permission = await window.Notification.requestPermission(); // value of permission can be 'granted', 'default', 'denied'\n  // granted: user has accepted the request\n  // default: user has dismissed the notification permission popup by clicking on x\n  // denied: user has denied the request.\n\n  if (permission !== 'granted') {\n    throw new Error('Permission not granted for Notification');\n  }\n\n  console.log(\"Permission \", permission);\n  return permission;\n};\n\nconst showLocalNotification = (title, body, swRegistration) => {\n  const options = {\n    body // here you can add more properties like icon, image, vibrate, etc.\n\n  }; // swRegistration.showNotification(title, options);\n};\n\nexport const PushNotificationWorker = {\n  check,\n  registerServiceWorker,\n  requestNotificationPermission,\n  showLocalNotification\n};","map":{"version":3,"sources":["C:/DEVEL/GITHUB/react_push_notification/src/serviceWorkerUtility.js"],"names":["check","navigator","Error","window","console","log","registerServiceWorker","swRegistration","serviceWorker","register","requestNotificationPermission","permission","Notification","requestPermission","showLocalNotification","title","body","options","PushNotificationWorker"],"mappings":"AAAA,MAAMA,KAAK,GAAG,MAAM;AAClB,MAAI,EAAE,mBAAmBC,SAArB,CAAJ,EAAqC;AACnC,UAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;AACD;;AACD,MAAI,EAAE,iBAAiBC,MAAnB,CAAJ,EAAgC;AAC9B,UAAM,IAAID,KAAJ,CAAU,sBAAV,CAAN;AACD;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACD,CARD;;AASA,MAAMC,qBAAqB,GAAG,YAAY;AACxC,QAAMC,cAAc,GAAG,MAAMN,SAAS,CAACO,aAAV,CAAwBC,QAAxB,CAAiC,wBAAjC,CAA7B;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,SAAOE,cAAP;AACD,CAJD;;AAMA,MAAMG,6BAA6B,GAAG,YAAY;AAChD,QAAMC,UAAU,GAAG,MAAMR,MAAM,CAACS,YAAP,CAAoBC,iBAApB,EAAzB,CADgD,CAEhD;AACA;AACA;AACA;;AACA,MAAIF,UAAU,KAAK,SAAnB,EAA8B;AAC5B,UAAM,IAAIT,KAAJ,CAAU,yCAAV,CAAN;AACD;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BM,UAA3B;AACA,SAAOA,UAAP;AACD,CAXD;;AAaA,MAAMG,qBAAqB,GAAG,CAACC,KAAD,EAAQC,IAAR,EAAcT,cAAd,KAAiC;AAC7D,QAAMU,OAAO,GAAG;AACdD,IAAAA,IADc,CAEd;;AAFc,GAAhB,CAD6D,CAK7D;AACD,CAND;;AASA,OAAO,MAAME,sBAAsB,GAAG;AACpClB,EAAAA,KADoC;AAEpCM,EAAAA,qBAFoC;AAGpCI,EAAAA,6BAHoC;AAIpCI,EAAAA;AAJoC,CAA/B","sourcesContent":["const check = () => {\r\n  if (!('serviceWorker' in navigator)) {\r\n    throw new Error('No Service Worker support!')\r\n  }\r\n  if (!('PushManager' in window)) {\r\n    throw new Error('No Push API Support!')\r\n  }\r\n  console.log(\"Service worker is supported in your browser!\")\r\n}\r\nconst registerServiceWorker = async () => {\r\n  const swRegistration = await navigator.serviceWorker.register('service-worker-push.js')\r\n  console.log(\"Service worker registerd!\")\r\n  return swRegistration\r\n}\r\n\r\nconst requestNotificationPermission = async () => {\r\n  const permission = await window.Notification.requestPermission();\r\n  // value of permission can be 'granted', 'default', 'denied'\r\n  // granted: user has accepted the request\r\n  // default: user has dismissed the notification permission popup by clicking on x\r\n  // denied: user has denied the request.\r\n  if (permission !== 'granted') {\r\n    throw new Error('Permission not granted for Notification');\r\n  }\r\n  console.log(\"Permission \", permission)\r\n  return permission\r\n}\r\n\r\nconst showLocalNotification = (title, body, swRegistration) => {\r\n  const options = {\r\n    body,\r\n    // here you can add more properties like icon, image, vibrate, etc.\r\n  };\r\n  // swRegistration.showNotification(title, options);\r\n}\r\n\r\n\r\nexport const PushNotificationWorker = {\r\n  check,\r\n  registerServiceWorker,\r\n  requestNotificationPermission,\r\n  showLocalNotification,\r\n\r\n}"]},"metadata":{},"sourceType":"module"}