{"ast":null,"code":"/* export default function checkWorker() {\r\n  if ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', function () {\r\n      navigator.serviceWorker.register('service-worker-push.js').then(function (registration) {\r\n        console.log('Worker registration is successful', registration.scope);\r\n        return registration;\r\n      }, function (err) {\r\n        console.log('Worker registration has failed', err);\r\n        return false\r\n      }).catch(function (err) {\r\n        console.log(err);\r\n        return false\r\n      });\r\n    });\r\n  } else {\r\n    console.log('Service Worker is not supported by your browser.');\r\n    return false\r\n  }\r\n}*/\nconst requestNotificationPermission = async () => {\n  const permission = await window.Notification.requestPermission(); // value of permission can be 'granted', 'default', 'denied'\n  // granted: user has accepted the request\n  // default: user has dismissed the notification permission popup by clicking on x\n  // denied: user has denied the request.\n\n  if (permission !== 'granted') {\n    throw new Error('Permission not granted for Notification');\n  }\n\n  return permission;\n};\n\nconst showLocalNotification = (title, body, swRegistration) => {\n  const options = {\n    body // here you can add more properties like icon, image, vibrate, etc.\n\n  };\n  swRegistration.showNotification(title, options);\n};\n\nexport const PushNotificationWorker = {\n  requestNotificationPermission,\n  showLocalNotification\n};","map":{"version":3,"sources":["C:/DEVEL/GITHUB/react_push_notification/src/serviceWorkerUtility.js"],"names":["requestNotificationPermission","permission","window","Notification","requestPermission","Error","showLocalNotification","title","body","swRegistration","options","showNotification","PushNotificationWorker"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;AAoBA,MAAMA,6BAA6B,GAAG,YAAY;AAChD,QAAMC,UAAU,GAAG,MAAMC,MAAM,CAACC,YAAP,CAAoBC,iBAApB,EAAzB,CADgD,CAEhD;AACA;AACA;AACA;;AACA,MAAIH,UAAU,KAAK,SAAnB,EAA8B;AAC5B,UAAM,IAAII,KAAJ,CAAU,yCAAV,CAAN;AACD;;AACD,SAAOJ,UAAP;AACD,CAVD;;AAYA,MAAMK,qBAAqB,GAAG,CAACC,KAAD,EAAQC,IAAR,EAAcC,cAAd,KAAiC;AAC7D,QAAMC,OAAO,GAAG;AACdF,IAAAA,IADc,CAEd;;AAFc,GAAhB;AAIAC,EAAAA,cAAc,CAACE,gBAAf,CAAgCJ,KAAhC,EAAuCG,OAAvC;AACD,CAND;;AASA,OAAO,MAAME,sBAAsB,GAAG;AACpCZ,EAAAA,6BADoC;AAEpCM,EAAAA;AAFoC,CAA/B","sourcesContent":["/* export default function checkWorker() {\r\n  if ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', function () {\r\n      navigator.serviceWorker.register('service-worker-push.js').then(function (registration) {\r\n        console.log('Worker registration is successful', registration.scope);\r\n        return registration;\r\n      }, function (err) {\r\n        console.log('Worker registration has failed', err);\r\n        return false\r\n      }).catch(function (err) {\r\n        console.log(err);\r\n        return false\r\n      });\r\n    });\r\n  } else {\r\n    console.log('Service Worker is not supported by your browser.');\r\n    return false\r\n  }\r\n}*/\r\n\r\nconst requestNotificationPermission = async () => {\r\n  const permission = await window.Notification.requestPermission();\r\n  // value of permission can be 'granted', 'default', 'denied'\r\n  // granted: user has accepted the request\r\n  // default: user has dismissed the notification permission popup by clicking on x\r\n  // denied: user has denied the request.\r\n  if (permission !== 'granted') {\r\n    throw new Error('Permission not granted for Notification');\r\n  }\r\n  return permission\r\n}\r\n\r\nconst showLocalNotification = (title, body, swRegistration) => {\r\n  const options = {\r\n    body,\r\n    // here you can add more properties like icon, image, vibrate, etc.\r\n  };\r\n  swRegistration.showNotification(title, options);\r\n}\r\n\r\n\r\nexport const PushNotificationWorker = {\r\n  requestNotificationPermission,\r\n  showLocalNotification\r\n}"]},"metadata":{},"sourceType":"module"}