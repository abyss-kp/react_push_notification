{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\DEVEL\\\\GITHUB\\\\react_push_notification\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\DEVEL\\\\GITHUB\\\\react_push_notification\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";/* export default function checkWorker() {\r\n  if ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', function () {\r\n      navigator.serviceWorker.register('service-worker-push.js').then(function (registration) {\r\n        console.log('Worker registration is successful', registration.scope);\r\n        return registration;\r\n      }, function (err) {\r\n        console.log('Worker registration has failed', err);\r\n        return false\r\n      }).catch(function (err) {\r\n        console.log(err);\r\n        return false\r\n      });\r\n    });\r\n  } else {\r\n    console.log('Service Worker is not supported by your browser.');\r\n    return false\r\n  }\r\n}*/var requestNotificationPermission=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var permission;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return window.Notification.requestPermission();case 2:permission=_context.sent;if(!(permission!=='granted')){_context.next=5;break;}throw new Error('Permission not granted for Notification');case 5:return _context.abrupt(\"return\",permission);case 6:case\"end\":return _context.stop();}}},_callee);}));return function requestNotificationPermission(){return _ref.apply(this,arguments);};}();var showLocalNotification=function showLocalNotification(title,body,swRegistration){var options={body:body// here you can add more properties like icon, image, vibrate, etc.\n};console.log(swRegistration);// swRegistration.showNotification(title, options);\n};export var PushNotificationWorker={requestNotificationPermission:requestNotificationPermission,showLocalNotification:showLocalNotification};","map":{"version":3,"sources":["C:/DEVEL/GITHUB/react_push_notification/src/serviceWorkerUtility.js"],"names":["requestNotificationPermission","window","Notification","requestPermission","permission","Error","showLocalNotification","title","body","swRegistration","options","console","log","PushNotificationWorker"],"mappings":"yUAAA;;;;;;;;;;;;;;;;;;GAoBA,GAAMA,CAAAA,6BAA6B,0FAAG,wKACXC,CAAAA,MAAM,CAACC,YAAP,CAAoBC,iBAApB,EADW,QAC9BC,UAD8B,oBAMhCA,UAAU,GAAK,SANiB,+BAO5B,IAAIC,CAAAA,KAAJ,CAAU,yCAAV,CAP4B,wCAS7BD,UAT6B,wDAAH,kBAA7BJ,CAAAA,6BAA6B,0CAAnC,CAYA,GAAMM,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,KAAD,CAAQC,IAAR,CAAcC,cAAd,CAAiC,CAC7D,GAAMC,CAAAA,OAAO,CAAG,CACdF,IAAI,CAAJA,IACA;AAFc,CAAhB,CAIAG,OAAO,CAACC,GAAR,CAAYH,cAAZ,EACA;AACD,CAPD,CAUA,MAAO,IAAMI,CAAAA,sBAAsB,CAAG,CACpCb,6BAA6B,CAA7BA,6BADoC,CAEpCM,qBAAqB,CAArBA,qBAFoC,CAA/B","sourcesContent":["/* export default function checkWorker() {\r\n  if ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', function () {\r\n      navigator.serviceWorker.register('service-worker-push.js').then(function (registration) {\r\n        console.log('Worker registration is successful', registration.scope);\r\n        return registration;\r\n      }, function (err) {\r\n        console.log('Worker registration has failed', err);\r\n        return false\r\n      }).catch(function (err) {\r\n        console.log(err);\r\n        return false\r\n      });\r\n    });\r\n  } else {\r\n    console.log('Service Worker is not supported by your browser.');\r\n    return false\r\n  }\r\n}*/\r\n\r\nconst requestNotificationPermission = async () => {\r\n  const permission = await window.Notification.requestPermission();\r\n  // value of permission can be 'granted', 'default', 'denied'\r\n  // granted: user has accepted the request\r\n  // default: user has dismissed the notification permission popup by clicking on x\r\n  // denied: user has denied the request.\r\n  if (permission !== 'granted') {\r\n    throw new Error('Permission not granted for Notification');\r\n  }\r\n  return permission\r\n}\r\n\r\nconst showLocalNotification = (title, body, swRegistration) => {\r\n  const options = {\r\n    body,\r\n    // here you can add more properties like icon, image, vibrate, etc.\r\n  };\r\n  console.log(swRegistration)\r\n  // swRegistration.showNotification(title, options);\r\n}\r\n\r\n\r\nexport const PushNotificationWorker = {\r\n  requestNotificationPermission,\r\n  showLocalNotification\r\n}"]},"metadata":{},"sourceType":"module"}