{"ast":null,"code":"const check = () => {\n  if (!('serviceWorker' in navigator)) {\n    console.error('No Service Worker support!');\n    return false;\n  }\n\n  if (!('PushManager' in window)) {\n    console.error('No Push API Support!');\n    return false;\n  }\n\n  console.log(\"Service worker is supported in your browser!\");\n  return true;\n};\n\nconst registerServiceWorker = async () => {\n  let registered = await navigator.serviceWorker.register('service-worker-push.js');\n  registered.active ? console.log(\"Service worker regisered!\") : registered = false;\n  return registered;\n};\n\nconst requestNotificationPermission = async () => {\n  const permission = await window.Notification.requestPermission(); // value of permission can be 'granted', 'default', 'denied'\n  // granted: user has accepted the request\n  // default: user has dismissed the notification permission popup by clicking on x\n  // denied: user has denied the request.\n\n  console.log(\"Permission \", permission);\n\n  if (permission !== 'granted') {\n    throw new Error('Permission not granted for Notification');\n  }\n\n  return permission;\n};\n\nconst showLocalNotification = (title, body, swRegistration) => {\n  console.log(\"*******\", title, body);\n  const options = {\n    body // here you can add more properties like icon, image, vibrate, etc.\n\n  };\n  console.log(swRegistration); // swRegistration.showNotification(title, options);\n};\n\nexport const PushNotificationWorker = {\n  check,\n  registerServiceWorker,\n  requestNotificationPermission,\n  showLocalNotification\n};","map":{"version":3,"sources":["C:/DEVEL/GITHUB/react_push_notification/src/serviceWorkerUtility.js"],"names":["check","navigator","console","error","window","log","registerServiceWorker","registered","serviceWorker","register","active","requestNotificationPermission","permission","Notification","requestPermission","Error","showLocalNotification","title","body","swRegistration","options","PushNotificationWorker"],"mappings":"AAAA,MAAMA,KAAK,GAAG,MAAM;AAClB,MAAI,EAAE,mBAAmBC,SAArB,CAAJ,EAAqC;AACnCC,IAAAA,OAAO,CAACC,KAAR,CAAc,4BAAd;AACA,WAAO,KAAP;AACD;;AACD,MAAI,EAAE,iBAAiBC,MAAnB,CAAJ,EAAgC;AAC9BF,IAAAA,OAAO,CAACC,KAAR,CAAc,sBAAd;AACA,WAAO,KAAP;AACD;;AACDD,EAAAA,OAAO,CAACG,GAAR,CAAY,8CAAZ;AACA,SAAO,IAAP;AACD,CAXD;;AAYA,MAAMC,qBAAqB,GAAG,YAAY;AACxC,MAAIC,UAAU,GAAG,MAAMN,SAAS,CAACO,aAAV,CAAwBC,QAAxB,CAAiC,wBAAjC,CAAvB;AACAF,EAAAA,UAAU,CAACG,MAAX,GACER,OAAO,CAACG,GAAR,CAAY,2BAAZ,CADF,GAEIE,UAAU,GAAG,KAFjB;AAGA,SAAOA,UAAP;AACD,CAND;;AAQA,MAAMI,6BAA6B,GAAG,YAAY;AAChD,QAAMC,UAAU,GAAG,MAAMR,MAAM,CAACS,YAAP,CAAoBC,iBAApB,EAAzB,CADgD,CAEhD;AACA;AACA;AACA;;AACAZ,EAAAA,OAAO,CAACG,GAAR,CAAY,aAAZ,EAA2BO,UAA3B;;AACA,MAAIA,UAAU,KAAK,SAAnB,EAA8B;AAC5B,UAAM,IAAIG,KAAJ,CAAU,yCAAV,CAAN;AACD;;AACD,SAAOH,UAAP;AACD,CAXD;;AAaA,MAAMI,qBAAqB,GAAG,CAACC,KAAD,EAAQC,IAAR,EAAcC,cAAd,KAAiC;AAC7DjB,EAAAA,OAAO,CAACG,GAAR,CAAY,SAAZ,EAAuBY,KAAvB,EAA8BC,IAA9B;AACA,QAAME,OAAO,GAAG;AACdF,IAAAA,IADc,CAEd;;AAFc,GAAhB;AAIAhB,EAAAA,OAAO,CAACG,GAAR,CAAYc,cAAZ,EAN6D,CAO7D;AACD,CARD;;AAWA,OAAO,MAAME,sBAAsB,GAAG;AACpCrB,EAAAA,KADoC;AAEpCM,EAAAA,qBAFoC;AAGpCK,EAAAA,6BAHoC;AAIpCK,EAAAA;AAJoC,CAA/B","sourcesContent":["const check = () => {\r\n  if (!('serviceWorker' in navigator)) {\r\n    console.error('No Service Worker support!')\r\n    return false\r\n  }\r\n  if (!('PushManager' in window)) {\r\n    console.error('No Push API Support!')\r\n    return false\r\n  }\r\n  console.log(\"Service worker is supported in your browser!\")\r\n  return true\r\n}\r\nconst registerServiceWorker = async () => {\r\n  let registered = await navigator.serviceWorker.register('service-worker-push.js')\r\n  registered.active ? (\r\n    console.log(\"Service worker regisered!\")\r\n  ) : registered = false\r\n  return registered\r\n}\r\n\r\nconst requestNotificationPermission = async () => {\r\n  const permission = await window.Notification.requestPermission();\r\n  // value of permission can be 'granted', 'default', 'denied'\r\n  // granted: user has accepted the request\r\n  // default: user has dismissed the notification permission popup by clicking on x\r\n  // denied: user has denied the request.\r\n  console.log(\"Permission \", permission)\r\n  if (permission !== 'granted') {\r\n    throw new Error('Permission not granted for Notification');\r\n  }\r\n  return permission\r\n}\r\n\r\nconst showLocalNotification = (title, body, swRegistration) => {\r\n  console.log(\"*******\", title, body)\r\n  const options = {\r\n    body,\r\n    // here you can add more properties like icon, image, vibrate, etc.\r\n  };\r\n  console.log(swRegistration)\r\n  // swRegistration.showNotification(title, options);\r\n}\r\n\r\n\r\nexport const PushNotificationWorker = {\r\n  check,\r\n  registerServiceWorker,\r\n  requestNotificationPermission,\r\n  showLocalNotification,\r\n\r\n}"]},"metadata":{},"sourceType":"module"}